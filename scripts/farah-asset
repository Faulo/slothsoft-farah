#!/usr/bin/env php
<?php
use Slothsoft\Farah\HTTPResponse;
use Slothsoft\Farah\Kernel;
use Slothsoft\Farah\FarahUrl\FarahUrl;
use Slothsoft\Farah\Http\MessageFactory;
use Slothsoft\Farah\Http\StatusCode;
use Slothsoft\Farah\RequestStrategy\LookupAssetStrategy;
use Slothsoft\Farah\ResponseStrategy\SendBodyStrategy;

array_shift($_SERVER['argv']);
$_SERVER['argc'] --;

$_composer_autoload_path ??= __DIR__ . '/../vendor/autoload.php';

include $_composer_autoload_path;

if (count($_SERVER['argv']) !== 1) {
    echo <<<'EOT'
    Retrieve a farah asset via its URL.
            
    Usage:
    composer exec farah-asset "farah://vendor@module/path/to/asset?arguments#stream-type"
    
    EOT;
    return 1;
}

$href = $_SERVER['argv'][0];
$url = FarahUrl::createFromReference($href, FarahUrl::createFromReference('farah://slothsoft@farah'));

$request = MessageFactory::createCustomRequest('GET', $url);
$requestStrategy = new LookupAssetStrategy();
$responseStrategy = new SendBodyStrategy();

$kernel = Kernel::getInstance();
$response = $kernel->handle($requestStrategy, $responseStrategy, $request);
$code = $response->getStatusCode();
if ($code !== HTTPResponse::STATUS_OK) {
    printf('HTTP/%s %s%s', $response->getProtocolVersion(), StatusCode::getMessage($code), PHP_EOL);
    foreach ($response->getHeaders() as $key => $headers) {
        foreach ($headers as $header) {
            printf('%s: %s%s', $key, $header, PHP_EOL);
        }
    }
    return $code;
}
return 0;